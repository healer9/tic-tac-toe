{"version":3,"sources":["components/Header.js","components/Square.js","components/Board.js","Helper.js","components/Game.js","App.js","index.js"],"names":["Header","Square","onClick","value","className","Board","squares","map","square","i","calculateWinner","lines","length","a","b","c","Game","useState","Array","fill","board","setBoard","xIsNext","setXIsNext","count","setCount","winner","getBoard","style","textAlign","marginTop","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mKAUeA,EARA,WACX,OACI,iCACI,gD,cCKGC,EARA,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MACvB,OACI,qBAAKD,QAASA,EAASE,UAAU,SAAjC,SACKD,KCUEE,EAZD,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASJ,EAAc,EAAdA,QACtB,OACI,qBAAKE,UAAU,QAAf,SACKE,EAAQC,KAAI,SAACC,EAAQC,GAClB,OAAO,cAAC,EAAD,CACHN,MAAOK,EACPN,QAAS,kBAAMA,EAAQO,KAFPA,SCoBrBC,EA3BS,SAACJ,GAYrB,IAXA,IAAMK,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGFF,EAAI,EAAGA,EAAIE,EAAMC,OAAQH,IAAK,CAAC,IAAD,cACjBE,EAAMF,GADW,GAC5BI,EAD4B,KACzBC,EADyB,KACtBC,EADsB,KAEnC,GAAIT,EAAQO,IAAMP,EAAQO,KAAOP,EAAQQ,IAAMR,EAAQO,KAAOP,EAAQS,GAClE,OAAOT,EAAQO,GAGvB,OAAO,MCuBIG,EArCF,WAAO,IAAD,EACWC,mBAASC,MAAM,GAAGC,KAAK,OADlC,mBACRC,EADQ,KACDC,EADC,OAEeJ,oBAAS,GAFxB,mBAERK,EAFQ,KAECC,EAFD,OAGWN,mBAAS,GAHpB,mBAGRO,EAHQ,KAGDC,EAHC,KAKTC,EAAShB,EAAgBU,GAiB/B,OACI,qCACI,cAAC,EAAD,CAAOd,QAASc,EAAOlB,QAjBX,SAACO,GACjB,IAAMkB,EAAQ,YAAOP,GACjBM,GAAUC,EAASlB,KAEvBkB,EAASlB,GAAKa,EAAU,IAAM,IAC9BD,EAASM,GACTJ,GAAYD,GACZG,EAASD,EAAQ,OAWb,sBAAKI,MAAO,CACRC,UAAW,SACXC,UAAW,MAFf,UAII,4BAAe,IAAVN,EAAD,iBAAmCE,EAAM,sBAAkBA,GAAlB,sBAA4CJ,EAAU,IAAM,OACzG,wBAAQpB,QAbD,WACfuB,EAAS,GACTJ,EAASH,MAAM,GAAGC,KAAK,QAWf,+BCpBDY,EAVH,WACV,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,0ECLNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bb03d63c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <h1>TIC-TAC-TOE</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Square = ({ onClick, value }) => {\r\n    return (\r\n        <div onClick={onClick} className=\"square\">\r\n            {value}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Square","import React from 'react'\r\nimport Square from './Square'\r\n\r\nconst Board = ({ squares, onClick }) => {\r\n    return (\r\n        <div className=\"board\">\r\n            {squares.map((square, i) => {\r\n                return <Square key={i}\r\n                    value={square}\r\n                    onClick={() => onClick(i)} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board\r\n","const calculateWinner = (squares) => {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ]\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i]\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n// const squares = [\r\n//     null, null, null,\r\n//     'X', 'O', null,\r\n//     null, 'X', null\r\n// ]\r\n\r\nexport default calculateWinner","import React, { useState } from 'react'\r\nimport Board from './Board'\r\nimport calculateWinner from '../Helper'\r\n\r\nconst Game = () => {\r\n    const [board, setBoard] = useState(Array(9).fill(null))\r\n    const [xIsNext, setXIsNext] = useState(true)\r\n    const [count, setCount] = useState(0)\r\n\r\n    const winner = calculateWinner(board)\r\n\r\n    const handleClick = (i) => {\r\n        const getBoard = [...board]\r\n        if (winner || getBoard[i]) return\r\n\r\n        getBoard[i] = xIsNext ? 'X' : 'O'\r\n        setBoard(getBoard)\r\n        setXIsNext(!xIsNext)\r\n        setCount(count + 1)\r\n    }\r\n\r\n    const handlePlay = () => {\r\n        setCount(0)\r\n        setBoard(Array(9).fill(null))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Board squares={board} onClick={handleClick} />\r\n            <div style={{\r\n                textAlign: 'center',\r\n                marginTop: '2%'\r\n            }}>\r\n                <p>{(count === 9) ? `Match Draw !!!` : winner ? `Winner is : ${winner}` : `Next Move : ${xIsNext ? 'X' : '0'}`}</p>\r\n                <button onClick={handlePlay}>\r\n                    Play Again</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Game","import React from 'react'\nimport Header from './components/Header'\nimport Game from './components/Game'\n\nconst App = () => {\n  return (\n    <>\n      <Header />\n      <Game />\n      <footer>Build With ‚ù§ using REACT JS</footer>\n    </>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}